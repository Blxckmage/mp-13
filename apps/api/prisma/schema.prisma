generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      Int           @id @default(autoincrement())
  username     String
  password     String
  email        String
  full_name    String
  phone_number String
  role         Role
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  events       Event[]       @relation("EventCreatedBy")
  ratings      Rating[]
  referrals    Referral[]    @relation("ReferralUser")
  transactions Transaction[]
  points       Points[]      @relation("UserPoints")
}

model Referral {
  referral_id   Int      @id @default(autoincrement())
  referrer_id   Int
  referral_code String   @unique
  created_at    DateTime @default(now())
  expires_at    DateTime
  user          User     @relation("ReferralUser", fields: [referrer_id], references: [user_id])
  points        Points[] @relation("ReferralPoints")

  @@index([referrer_id], map: "Referral_referrer_id_fkey")
}

model Points {
  points_id   Int      @id @default(autoincrement())
  referral_id Int
  user_id     Int
  points      Int
  created_at  DateTime @default(now())
  expires_at  DateTime
  user        User     @relation("UserPoints", fields: [user_id], references: [user_id])
  referral    Referral @relation("ReferralPoints", fields: [referral_id], references: [referral_id])

  @@index([user_id], map: "Points_user_id_fkey")
  @@index([referral_id], map: "Points_referral_id_fkey")
}

model Event {
  event_id          Int         @id @default(autoincrement())
  event_name        String
  event_description String
  event_date        DateTime
  event_category    String
  event_location    String
  available_seats   Int
  created_by        Int
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt
  creator           User        @relation("EventCreatedBy", fields: [created_by], references: [user_id])
  promotions        Promotion[]
  ratings           Rating[]
  tickets           Ticket[]

  @@index([created_by], map: "Event_created_by_fkey")
}

model Ticket {
  ticket_id    Int           @id @default(autoincrement())
  event_id     Int
  ticket_type  String
  price        Float
  quantity     Int
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  event        Event         @relation(fields: [event_id], references: [event_id])
  transactions Transaction[]

  @@index([event_id], map: "Ticket_event_id_fkey")
}

model Payment {
  payment_id     Int           @id @default(autoincrement())
  payment_method String
  payment_status String
  payment_date   DateTime      @default(now())
  transactions   Transaction[]
}

model Rating {
  rating_id  Int      @id @default(autoincrement())
  event_id   Int
  user_id    Int
  rating     Int
  comment    String
  created_at DateTime @default(now())
  event      Event    @relation(fields: [event_id], references: [event_id])
  user       User     @relation(fields: [user_id], references: [user_id])

  @@index([event_id], map: "Rating_event_id_fkey")
  @@index([user_id], map: "Rating_user_id_fkey")
}

model Promotion {
  promotion_id        Int      @id @default(autoincrement())
  event_id            Int
  discount_percentage Float
  valid_from          DateTime
  valid_until         DateTime
  max_uses            Int
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  event               Event    @relation(fields: [event_id], references: [event_id])

  @@index([event_id], map: "Promotion_event_id_fkey")
}

model Transaction {
  transaction_id   Int      @id @default(autoincrement())
  user_id          Int
  ticket_id        Int
  transaction_date DateTime @default(now())
  quantity         Int
  total_amount     Float
  payment_id       Int
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  payment          Payment  @relation(fields: [payment_id], references: [payment_id])
  ticket           Ticket   @relation(fields: [ticket_id], references: [ticket_id])
  user             User     @relation(fields: [user_id], references: [user_id])

  @@index([user_id], map: "Transaction_user_id_fkey")
  @@index([ticket_id], map: "Transaction_ticket_id_fkey")
  @@index([payment_id], map: "Transaction_payment_id_fkey")
}

enum Role {
  participant
  organizer
}
